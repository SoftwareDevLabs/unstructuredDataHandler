name: Python Tests (consolidated)

permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_providers:
        description: 'Set to true to run the providers matrix (manual run)'
        required: false
        default: 'false'

jobs:
  static-analysis:
    name: Static analysis & unit tests (one python)
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python Environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: '3.11'
      - name: Run ruff (lint)
        run: |
          python -m ruff check src/
      - name: Run unit tests with coverage
        run: |
          PYTHONPATH=. pytest --cov=src/ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run mypy static analysis
        run: mypy src/ --ignore-missing-imports --exclude "src/llm/router.py"

  tests:
    name: Run tests matrix

    permissions:
      contents: read

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    steps:
      - name: Setup Python Environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          python -m pytest -q

  deepagent-test:
    name: DeepAgent focused tests (fast)
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Setup Python Environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: '3.12'
      - name: Run deepagent unit tests
        env:
          PYTHONPATH: .
        run: |
          python -m pytest -q test/unit/test_deepagent.py test/unit/test_deepagent_providers.py

  provider-smoke:
    name: Provider smoke (manual)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Setup Python Environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: '3.12'
          install-dev-reqs: 'false' # python-dotenv is in dev-reqs, but we want to install it manually
      - name: Install provider packages
        run: |
          pip install langchain-google-genai langchain-community langchain-ollama python-dotenv
      - name: Quick deepagent smoke (dry-run disabled)
        env:
          PYTHONPATH: .
        run: |
          python -c "from src.agents import deepagent; a=deepagent.SDLCFlexibleAgent(provider='gemini', model='chat-bison-001', dry_run=True); print('constructed', getattr(a, 'llm', None))"

  providers:
    name: Providers matrix (optional)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.run_providers == 'true'
    strategy:
      matrix:
        provider: [gemini, openai, ollama]
    steps:
      - name: Setup Python Environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: '3.12'
          install-dev-reqs: 'false'
      - name: Install provider packages
        run: |
          pip install langchain-google-genai langchain-community langchain-ollama
      - name: Run provider smoke for matrix provider
        env:
          PYTHONPATH: .
        run: |
          python -c "from src.agents import deepagent; p='${{ matrix.provider }}'; d = deepagent.SDLCFlexibleAgent(provider=p, dry_run=True); print('provider', p, 'dry_run', getattr(d, 'dry_run', False))"
